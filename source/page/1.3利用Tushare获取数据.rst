.. final term documentation master file, created by
   sphinx-quickstart on Wed Jun  3 23:09:49 2020.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.




1.3 利用Tushare获取数据
==================================
本节着重介绍如何利用Tushare获取想要的金融数据，考虑到篇幅限制和数据的常用度，这里只介绍获取交易数据、股票分类数据和基本面数据的获取方式。其他投资参考数据、宏观经济数据、新闻事件数据等的获取，可以参考http://www.tushare.org


1. 交易数据
-----------------------------------

（1）交易行情
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
获取个股历史交易数据（包括均线数据），可以通过参数设置获取日k线、周k线、月k线，以及5分钟、15分钟、30分钟和60分钟k线数据。本接口只能获取近3年的日线数据，适合搭配均线数据进行选股和分析，如果需要全部历史数据，可以调用下一个接口get_h_data()。

调用方法::

  import tushare as ts
  ts.get_hist_data('code',start,end,type,retry_count,pause)
  
参数说明：

* code：股票代码,即6位数字代码，或者指数代码（sh=上证指数 sz=深圳成指 hs300=沪深300指数 sz50=上证50 zxb=中小板 cyb=创业板）
* start：开始日期，格式YYYY-MM-DD
* end：结束日期，格式YYYY-MM-DD
* ktype：数据类型，D=日k线 W=周 M=月 5=5分钟 15=15分钟 30=30分钟 60=60分钟，默认为D
* retry_count：当网络异常后重试次数，默认为3
* pause:重试时停顿秒数，默认为0

返回值说明：

* date：日期
* open：开盘价
* high：最高价
* close：收盘价
* low：最低价
* volume：成交量
* price_change：价格变动
* p_change：涨跌幅
* ma5：5日均价
* ma10：10日均价
* ma20:20日均价
* v_ma5:5日均量
* v_ma10:10日均量
* v_ma20:20日均量
* turnover:换手率[注：指数无此项]

（2）复权数据
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
获取历史复权数据，分为前复权和后复权数据，接口提供股票上市以来所有历史数据，默认为前复权。如果不设定开始和结束日期，则返回近一年的复权数据，从性能上考虑，推荐设定开始日期和结束日期，而且最好不要超过三年以上，获取全部历史数据，请分年段分步获取，取到数据后，请及时在本地存储。获取个股首个上市日期，请参考以下方法::

  df = ts.get_stock_basics()
  date = df.ix['600848']['timeToMarket'] #上市日期YYYYMMDD

本接口还提供大盘指数的全部历史数据，调用时，请务必设定index参数为True,由于大盘指数不存在复权的问题，故可以忽略autype参数::

  ts.get_h_data('002337') #前复权
  ts.get_h_data('002337', autype='hfq') #后复权
  ts.get_h_data('002337', autype=None) #不复权
  ts.get_h_data('002337', start='2015-01-01', end='2015-03-16') #两个日期之间的前复权数据
  ts.get_h_data('399106', index=True) #深圳综合指数
  
参数说明：

* code:string,股票代码 e.g. 600848
* start:string,开始日期 format：YYYY-MM-DD 为空时取当前日期
* end:string,结束日期 format：YYYY-MM-DD 为空时取去年今日
* autype:string,复权类型，qfq-前复权 hfq-后复权 None-不复权，默认为qfq
* index:Boolean，是否是大盘指数，默认为False
* retry_count : int, 默认3,如遇网络等问题重复执行的次数
* pause : int, 默认 0,重复请求数据过程中暂停的秒数，防止请求间隔时间太短出现的问题

返回值说明：

* date : 交易日期 (index)
* open : 开盘价
* high : 最高价
* close : 收盘价
* low : 最低价
* volume : 成交量
* amount : 成交金额

（3）实时行情
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
一次性获取当前交易所有股票的行情数据（如果是节假日，即为上一交易日，结果显示速度取决于网速）::

 import tushare as ts
 ts.get_today_all()

返回值说明：

* code：代码
* name:名称
* changepercent:涨跌幅
* trade:现价
* open:开盘价
* high:最高价
* low:最低价
* settlement:昨日收盘价
* volume:成交量
* turnoverratio:换手率
* amount:成交金额
* per:市盈率
* pb:市净率
* mktcap:总市值
* nmc:流通市值

（4）实时分笔
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
获取实时分笔数据，可以实时取得股票当前报价和成交信息，其中一种场景是，写一个python定时程序来调用本接口（可两三秒执行一次，性能与行情软件基本一致），然后通过DataFrame的矩阵计算实现交易监控，可实时监测交易量和价格的变化。

调用方法::

  import tushare as ts
  df = ts.get_realtime_quotes('000581') #Single stock symbol
  df[['code','name','price','bid','ask','volume','amount','time']]
  
参数说明：

* symbols：6位数字股票代码，或者指数代码（sh=上证指数 sz=深圳成指 hs300=沪深300指数 sz50=上证50 zxb=中小板 cyb=创业板） 可输入的类型：str、list、set或者pandas的Series对象

返回值说明：

* name，股票名字
* open，今日开盘价
* pre_close，昨日收盘价
* price，当前价格
* high，今日最高价
* low，今日最低价
* bid，竞买价，即“买一”报价
* ask，竞卖价，即“卖一”报价
* volume，成交量 maybe you need do volume/100
* amount，成交金额（元 CNY）
* b1_v，委买一（笔数 bid volume）
* b1_p，委买一（价格 bid price）
* b2_v，“买二”
* b2_p，“买二”
* b3_v，“买三”
* b3_p，“买三”
* b4_v，“买四”
* b4_p，“买四”
* b5_v，“买五”
* b5_p，“买五”
* a1_v，委卖一（笔数 ask volume）
* a1_p，委卖一（价格 ask price）

...

* date，日期；
* time，时间；

请求多个股票方法（一次最好不要超过30个）::

 #symbols from a list
 ts.get_realtime_quotes(['600848','000980','000981'])
 #from a Series
 ts.get_realtime_quotes(df['code'].tail(10))  #一次获取10个股票的实时分笔数据
 
获取实时指数::
 
 #上证指数
 ts.get_realtime_quotes('sh')
 #上证指数 深圳成指 沪深300指数 上证50 中小板 创业板
 ts.get_realtime_quotes(['sh','sz','hs300','sz50','zxb','cyb'])
 #或者混搭
 ts.get_realtime_quotes(['sh','600848'])
 
（5）大盘指数行情列表
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
获取大盘指数实时行情列表，以表格的形式展示大盘指数实时行情。

调用方法::

 import tushare as ts
 df = ts.get_index()

返回值说明：

* code:指数代码
* name:指数名称
* change:涨跌幅
* open:开盘点位
* preclose:昨日收盘点位
* close:收盘点位
* high:最高点位
* low:最低点位
* volume:成交量(手)
* amount:成交金额（亿元）

2. 分类数据
-----------------------------------
分类数据提供股票的分类信息数据，从股票类型的不同角度进行数据分类，在一些统计套利方法的应用中，时常会以股票的分类来做切入，比如对某些行业或概念进行阶段统计来决定近期的交易策略等。

（1）行业分类
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
在现实交易中，经常会按行业统计股票的涨跌幅或资金进出，本接口按照sina财经对沪深股票进行的行业分类，返回所有股票所属行业的信息。

调用方法::

 import tushare as ts
 ts.get_industry_classified()
 
返回值说明：

* code：股票代码
* name：股票名称
* c_name：行业名称

（2）概念分类
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
返回股票概念的分类数据，现实的二级市场交易中，经常会以”概念”来炒作，在数据分析过程中，可根据概念分类监测资金等信息的变动情况。

调用方法::

 import tushare as ts
 ts.get_concept_classified()
 
返回值说明：

* code：股票代码
* name：股票名称
* c_name：概念名称

（3）中小板分类
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
获取中小板股票数据，即查找所有002开头的股票::

 import tushare as ts
 ts.get_sme_classified()

（4）创业板分类
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
获取创业板股票数据，即查找所有300开头的股票::
 
 import tushare as ts
 ts.get_gem_classified()
 
（5）沪深300成份、上证50成分股、中证500成分股
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
调用方法::
 
 import tushare as ts
 ts.get_hs300s()/sz50s()/zz500s() #分别代表沪深300成份、上证50成分股、中证500成分股

3. 基本面数据
-----------------------------------
基本面类数据提供所有股票的基本面情况，包括股本情况、业绩预告和业绩报告等。

（1）股票列表
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
获取沪深上市公司基本情况。属性包括：

* code,代码
* name,名称
* industry,所属行业
* area,地区
* pe,市盈率
* outstanding,流通股本(亿)
* totals,总股本(亿)
* totalAssets,总资产(万)
* liquidAssets,流动资产
* fixedAssets,固定资产
* reserved,公积金
* reservedPerShare,每股公积金
* esp,每股收益
* bvps,每股净资
* pb,市净率
* timeToMarket,上市日期
* undp,未分利润
* perundp, 每股未分配
* rev,收入同比(%)
* profit,利润同比(%)
* gpr,毛利率(%)
* npr,净利润率(%)
* holders,股东人数

调用方法::

 import tushare as ts
 ts.get_stock_basics()
 
（2）业绩报告（主表）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
按年度、季度获取业绩报表数据::
 
 ts.get_report_data(2014,3) #获取2014年第三季度的业绩报表数据

返回值说明：

* code,代码
* name,名称
* esp,每股收益
* eps_yoy,每股收益同比(%)
* bvps,每股净资产
* roe,净资产收益率(%)
* epcf,每股现金流量(元)
* net_profits,净利润(万元)
* profits_yoy,净利润同比(%)
* distrib,分配方案
* report_date,发布日期

（3）盈利能力
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
按年度、季度获取盈利能力数据::
 
 ts.get_profit_data(2014,3) #获取2014年第三季度盈利数据
 
返回数据属性：

* code,代码
* name,名称
* roe,净资产收益率(%)
* net_profit_ratio,净利率(%)
* gross_profit_rate,毛利率(%)
* net_profits,净利润(万元)
* esp,每股收益
* business_income,营业收入(百万元)
* bips,每股主营业务收入(元)

（4）营运能力
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
按年度、季度获取营运能力数据::

 ts.get_operation_data(2014,3)
 
返回数据属性：

* code,代码
* name,名称
* arturnover,应收账款周转率(次)
* arturndays,应收账款周转天数(天)
* inventory_turnover,存货周转率(次)
* inventory_days,存货周转天数(天)
* currentasset_turnover,流动资产周转率(次)
* currentasset_days,流动资产周转天数(天)code,代码
* name,名称
* arturnover,应收账款周转率(次)
* arturndays,应收账款周转天数(天)
* inventory_turnover,存货周转率(次)
* inventory_days,存货周转天数(天)
* currentasset_turnover,流动资产周转率(次)
* currentasset_days,流动资产周转天数(天)

（5）成长能力
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
按年度、季度获取成长能力数据::

 ts.get_growth_data(2014,3)

返回数据属性：

* code,代码
* name,名称
* mbrg,主营业务收入增长率(%)
* nprg,净利润增长率(%)
* nav,净资产增长率
* targ,总资产增长率
* epsg,每股收益增长率
* seg,股东权益增长率

（6）偿债能力
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
按年度、季度获取偿债能力数据::

 ts.get_debtpaying_data(2014,3)

返回数据属性：

* code,代码
* name,名称
* currentratio,流动比率
* quickratio,速动比率
* cashratio,现金比率
* icratio,利息支付倍数
* sheqratio,股东权益比率
* adratio,股东权益增长率

（7）现金流量
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
按年度、季度获取现金流量数据::

 ts.get_cashflow_data(2014,3)

返回数据属性：

* code,代码
* name,名称
* cf_sales,经营现金净流量对销售收入比率
* rateofreturn,资产的经营现金流量回报率
* cf_nm,经营现金净流量与净利润的比率
* cf_liabilities,经营现金净流量对负债比率
* cashflowratio,现金流量比率